{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EMRE CAN\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = _ref => {\n  _s();\n  var _errors$title, _errors$description, _errors$people;\n  let {\n    kisiler,\n    submitFn\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  const onSubmit = data => {\n    submitFn({\n      ...data,\n      id: nanoid(5),\n      status: \"yapılacak\"\n    });\n    reset();\n  };\n  const isButtonDisabled = Object.keys(errors).length > 0;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        ...register(\"title\", {\n          required: \"Task başlığı yazmalısın\",\n          minLength: {\n            value: 3,\n            message: \"Task başlığı en az 3 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        rows: \"3\",\n        id: \"description\",\n        name: \"description\",\n        ...register(\"description\", {\n          required: \"Task açıklaması yazmalısınız\",\n          minLength: {\n            value: 10,\n            message: \"Task açıklaması en az 10 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"people\",\n            value: p,\n            ...register(\"people\", {\n              required: \"Lütfen en az bir kişi seçin\",\n              validate: value => value.length <= 3 || \"En fazla 3 kişi seçebilirsiniz\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), p]\n        }, p, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$people = errors.people) === null || _errors$people === void 0 ? void 0 : _errors$people.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: isButtonDisabled,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"D/rONehOso1a3GECTIEvxi+E0so=\", false, function () {\n  return [useForm];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useForm","nanoid","TaskForm","kisiler","submitFn","register","handleSubmit","formState","errors","reset","onSubmit","data","id","status","isButtonDisabled","Object","keys","length","required","minLength","value","message","title","description","map","p","validate","people"],"sources":["C:/Users/EMRE CAN/fsweb-s9g1-task-yonetimi/src/TaskForm.js"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { nanoid } from \"nanoid\";\r\n\r\n\r\nconst TaskForm = ({ kisiler, submitFn }) => {\r\n  const { register, handleSubmit, formState: { errors },reset, } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    submitFn({\r\n      ...data,\r\n      id: nanoid(5),\r\n      status:\"yapılacak\",\r\n    });\r\n    reset();\r\n   };\r\n  const isButtonDisabled = Object.keys(errors).length > 0;\r\n\r\n  return (\r\n    <form className=\"taskForm\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"title\">\r\n          Başlık\r\n        </label>\r\n        <input\r\n          className=\"input-text\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          {...register(\"title\",{\r\n            required:\"Task başlığı yazmalısın\",\r\n            minLength:{\r\n              value:3,\r\n              message:\"Task başlığı en az 3 karakter olmalı\",},\r\n          })}\r\n          \r\n        />\r\n        <p className=\"input-error\">{errors.title?.message}</p>\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"description\">\r\n          Açıklama\r\n        </label>\r\n        <textarea\r\n          className=\"input-textarea\"\r\n          rows=\"3\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          {...register(\"description\", {\r\n            required: \"Task açıklaması yazmalısınız\",\r\n            minLength: {\r\n              value:10,\r\n              message:\"Task açıklaması en az 10 karakter olmalı\",\r\n            },\r\n          })}\r\n          \r\n        ></textarea>\r\n        <p className=\"input-error\">{errors.description?.message}</p>\r\n      </div>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\">İnsanlar</label>\r\n        <div>\r\n          {kisiler.map((p) => (\r\n            <label className=\"input-checkbox\" key={p}>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"people\"\r\n                value={p}\r\n                {...register(\"people\", {\r\n                  required:\"Lütfen en az bir kişi seçin\",\r\n                  validate:(value)=>\r\n                  value.length <= 3 || \"En fazla 3 kişi seçebilirsiniz\",\r\n                })}\r\n              />\r\n              {p}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <p className=\"input-error\">{errors.people?.message}</p>\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <button\r\n          className=\"submit-button\"\r\n          type=\"submit\"\r\n          disabled={isButtonDisabled}\r\n        >\r\n          Kaydet\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}