{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EMRE CAN\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from \"react-hook-dom\";\nimport { nanoid } from 'nanoid';\nimport { object } from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskHookForm = _ref => {\n  _s();\n  var _errors$title, _errors$description, _errors$people;\n  let {\n    kisiler,\n    submitFn\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => {\n    submitFn({\n      ...data,\n      id: nanoid(5),\n      status: \"yapılacak\"\n    });\n  };\n  const isButtonDisabled = object.keys(errors).length > 0;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        ...register(\"title\", {\n          required: \"Task başlığı yazmalısınız\",\n          minLength: {\n            value: 3,\n            message: \"Task başlığı en az 3 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        rows: \"3\",\n        id: \"description\",\n        name: \"description\",\n        ...register(\"description\", {\n          required: \"Task açıklaması yazmalısınız\",\n          minLength: {\n            value: 10,\n            message: \"Task açıklaması en az 10 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"people\",\n            value: p,\n            ...register(\"people\", {\n              required: \"Lütfen en az bir kişi seçin\",\n              validate: value => value.length <= 3 || \"En fazla 3 kişi seçebilirsiniz\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), p]\n        }, p, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$people = errors.people) === null || _errors$people === void 0 ? void 0 : _errors$people.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: isButtonDisabled,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_s(TaskHookForm, \"KBu5Id/+f5je8NjWJLzQO5k6aQ8=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nexport default TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["React","useForm","nanoid","object","TaskHookForm","kisiler","submitFn","register","handleSubmit","formState","errors","onSubmit","data","id","status","isButtonDisabled","keys","length","required","minLength","value","message","title","description","map","p","validate","people"],"sources":["C:/Users/EMRE CAN/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import React from 'react';\r\nimport {useForm} from \"react-hook-dom\";\r\nimport { nanoid } from 'nanoid';\r\nimport { object } from 'yup';\r\n\r\nconst TaskHookForm=({kisiler,submitFn}) => {\r\n  const {register, handleSubmit, formState: {errors},} = useForm();\r\n\r\nconst onSubmit = (data) => {\r\n  submitFn({\r\n    ...data,\r\n    id:nanoid(5),\r\n    status:\"yapılacak\",\r\n\r\n  });\r\n};\r\n\r\nconst isButtonDisabled = object.keys(errors).length > 0;\r\n\r\n  return (\r\n      <form className=\"taskForm\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-line\">\r\n          <label className=\"input-label\" htmlFor=\"title\">\r\n            Başlık\r\n          </label>\r\n          <input\r\n            className=\"input-text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            type=\"text\"\r\n            {...register(\"title\", {\r\n              required: \"Task başlığı yazmalısınız\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Task başlığı en az 3 karakter olmalı\",\r\n              },\r\n            })}\r\n          />\r\n          <p className=\"input-error\">{errors.title?.message}</p>\r\n        </div>\r\n  \r\n        <div className=\"form-line\">\r\n          <label className=\"input-label\" htmlFor=\"description\">\r\n            Açıklama\r\n          </label>\r\n          <textarea\r\n            className=\"input-textarea\"\r\n            rows=\"3\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            {...register(\"description\", {\r\n              required: \"Task açıklaması yazmalısınız\",\r\n              minLength: {\r\n                value: 10,\r\n                message: \"Task açıklaması en az 10 karakter olmalı\",\r\n              },\r\n            })}\r\n          ></textarea>\r\n          <p className=\"input-error\">{errors.description?.message}</p>\r\n        </div>\r\n  \r\n        <div className=\"form-line\">\r\n          <label className=\"input-label\">İnsanlar</label>\r\n          <div>\r\n            {kisiler.map((p) => (\r\n              <label className=\"input-checkbox\" key={p}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"people\"\r\n                  value={p}\r\n                  {...register(\"people\", {\r\n                    required: \"Lütfen en az bir kişi seçin\",\r\n                    validate: (value) =>\r\n                      value.length <= 3 || \"En fazla 3 kişi seçebilirsiniz\",\r\n                  })}\r\n                />\r\n                {p}\r\n              </label>\r\n            ))}\r\n          </div>\r\n          <p className=\"input-error\">{errors.people?.message}</p>\r\n        </div>\r\n  \r\n        <div className=\"form-line\">\r\n          <button className=\"submit-button\" type=\"submit\" disabled={isButtonDisabled}>\r\n            Kaydet\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n};\r\n\r\nexport default TaskHookForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}